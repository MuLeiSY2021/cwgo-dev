serverArgument:
  commonParam:
    serverName: "MyServer"
    type: "RPC"
    goMod: "myserver"
    idlPath: "/path/to/idl"
    outDir: "/path/to/output"
    registry: "etcd"
  template: "myTemplate"
  branch: "main"
  sliceParam:
    pass:
      - "pass1"
      - "pass2"
    protoSearchPath:
      - "/path/to/proto"
  hex: true
  cwd: "/path/to/cwd"
  goSrc: "/path/to/goSrc"
  goPkg: "myGoPkg"
  goPath: "/path/to/goPath"

clientArgument:
  commonParam:
    serverName: "MyClient"
    type: "HTTP"
    goMod: "myclient"
    idlPath: "/path/to/client/idl"
    outDir: "/path/to/client/output"
    registry: "consul"
  sliceParam:
    pass:
      - "clientPass1"
      - "clientPass2"
    protoSearchPath:
      - "/path/to/client/proto"
  template: "clientTemplate"
  branch: "develop"
  cwd: "/path/to/client/cwd"
  goSrc: "/path/to/client/goSrc"
  goPkg: "myClientPkg"
  goPath: "/path/to/client/goPath"

modelArgument:
  dsn: "user:password@tcp(localhost:3306)/dbname"
  type: "mysql"
  tables:
    - "users"
    - "orders"
  excludeTables:
    - "logs"
  onlyModel: true
  outPath: "/path/to/model/out"
  outFile: "model.go"
  withUnitTest: true
  modelPkgName: "mymodel"
  fieldNullable: false
  fieldSignable: true
  fieldWithIndexTag: true
  fieldWithTypeTag: false
  sqlDir: "/path/to/sql"

docArgument:
  goMod: "mydoc"
  packagePrefix: "com.example"
  idlPath: "/path/to/idl"
  idlType: "proto"
  outDir: "/path/to/doc/output"
  name: "MyDoc"
  modelDir: "/path/to/model"
  daoDir: "/path/to/dao"
  protoSearchPath:
    - "/path/to/proto"
  protocOptions:
    - "--proto_path=/path/to/proto"
  thriftOptions:
    - "--gen=go"
  genBase: true

jobArgument:
  goMod: "myjob"
  packagePrefix: "com.jobs"
  jobName:
    - "job1"
    - "job2"
  outDir: "/path/to/job/output"

apiArgument:
  projectPath: "/path/to/project"
  hertzRepoUrl: "https://github.com/hertz"

fallbackArgument:
  toolType: "toolA"
  args:
    - "arg1"
    - "arg2"